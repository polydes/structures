plugins {
    id 'antlr'
	id 'eclipse'
	id 'java-library'
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

tasks.withType(JavaCompile).each {
    it.options.compilerArgs.add('--enable-preview')
}

//building an artifact using a local-only build artifact of Stencyl
var localBuild = project.hasProperty("local_build")
//developing as a submodule of Stencyl
var localDev = project.hasProperty("local_dev")

group = 'com.polydes'
version = rootProject.file('version.txt').text.trim()

sourceSets {
	main {
	    antlr {
	        srcDirs = ['src-antlr']
	    }
        java {
            srcDir 'src'
        }
    }
}

processResources {
    from('res') {
    	into 'res/com/polydes/datastruct'
    }
    from(rootProject.file('icon.png')) {
        into 'com/polydes/datastruct/res'
    }
}

repositories {
    if(localBuild) {
        mavenLocal()
    }
    mavenCentral()
    maven {
        url "https://www.stencyl.com/dl/maven2/releases"
    }
    maven {
        url "https://www.stencyl.com/dl/maven2/snapshots"
    }
}

configurations {
    api {
        // Undo extendsFrom relationship between the 'antlr' configuration and the 'api' configuration
        // https://github.com/gradle/gradle/issues/820#issuecomment-748623864
        extendsFrom = extendsFrom.findAll { it != configurations.antlr }
    }
}

def antlrVersion = '4.5'
dependencies {
    antlr group: 'org.antlr', name: 'antlr4', version: antlrVersion
    
    //Stencyl and its dependencies
    implementation enforcedPlatform('com.stencyl:stencyl-platform:4.1.0-SNAPSHOT')
    if(localDev) {
        compileOnly project(":")
        compileOnly project(":stencyl-v5-core")
        compileOnly project(":stencyl-v5-toolset")
    } else {
        compileOnly group: 'com.stencyl', name: 'stencyl', version: '4.1.0-SNAPSHOT'
    }
    compileOnly group: 'com.stencyl',        name: 'jide-oss'
    compileOnly group: 'org.apache.commons', name: 'commons-lang3'
	compileOnly group: 'ch.qos.reload4j',    name: 'reload4j'
    compileOnly group: 'commons-io',         name: 'commons-io'
    
    implementation (group: 'org.antlr',   name: 'antlr4-runtime', version: antlrVersion) {
        exclude group: 'org.abego.treelayout', module: 'org.abego.treelayout.core'
    }
    implementation group: 'tablelayout', name: 'TableLayout',    version: '20050920'
}

jar {
	from {
		configurations.runtimeClasspath.collect { zipTree(it) }
	}
    manifest {
		attributes(
			"Extension-ID": "com.polydes.datastruct",
			"Extension-Main-Class": "com.polydes.datastruct.DataStructuresExtension",
			"Extension-Version": version,
			"Extension-Icon": "com/polydes/datastruct/res/icon.png",
			"Extension-Dependencies": "",
			"Extension-Type": "game",
			"Extension-Name": "Data Structures Extension",
			"Extension-Description": "Create and Manage Data Structures.",
			"Extension-Author": "Justin Espedal",
			"Extension-Website": "http://www.polydes.com/repo/toolset/com.polydes.datastruct",
			"Extension-Repository": "http://www.polydes.com/repo",
			"Extension-Internal-Version": "4"
		)
	}
}